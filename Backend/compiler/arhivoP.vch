
mut hola1 string = "hola plebeyos"
print(hola1)
print("hello, probando global")

struct Persona {
  string Nombre
  int Edad
  bool EsEstudiante
}

struct Juego {
  string Nombre
  string Genero
  int Edad
  bool EsBueno
  bool EsAccion
}

fn imprimirSuma(a int, b int) {
  print("La suma es:", a + b)
}

fn saludar() {
  print("Hola desde una función!")
}

fn cuadrado(n int) int {
  return n * n
}



fn main() {
    print("Hola Mundo")
    print("cadean1", "cadena2")
    print(10, true, 'A')
    print(1.00001)
    mut puy int = 100
    print("valor de puy: ", puy)
    puy = 100+100
    print("valor de puy: ", puy)
    print("valor de puy: ", puy)
    mut ttt string = "hola, PUM"
    print("valor de ttt: ", ttt)
    print("valor de ttt: ", ttt)
    mut i int = 15
    mut j string = "como estas"
    mut k rune = 'B'
    print(i,j,k)
    i += 100
    print("ahora el valor de I es: ", i)
    i -= 100
    print("ahora el valor de I es: ", i)
    mut defect int 
    mut defect1 bool
    print("valor por defecto de un int: ", defect)
    print("valor por defecto de un bool: ", defect1)
    defect1 bool = true
    print("valor del booleno cambiado porque guate gano GUATE ES CLAVE: ", defect1)
    mut var int = 15+15
    print("valor de var: ", var)
    print("GANO GUATE VAMOSS", 5+5.5)
    print(10 % 3)
    print(1 / 3.0)
    print(1.0 * 13.0)
    print("conca" + "tenacion")
    print(1==1, 1 != 1, 13.0 == 13.0, 0.001 != 0.001, 35 == 35.0, 98.0 == 98, true == false, false != true)
    print("ho" == "Ha", "Ho" != "Ho", 'h' == 'a', 'H' != 'H')
    print("operadores relacionales")
    print(13.0 >= 13.0, 65 >= 70.7, 40.6 >= 30, 'h' > 'a', 1<1)
    print("operadores logicos")
    print(-i, true && true, true && false, false && true, false && false)
    print(true || true, true || false, false || true, false || false)
    print(!true, !false)


    mut x int = 70
    mut y int = 500
    print(x)

    if x < 5 {
        print("x es menor que 5")
    } else if x < 10 {
        print("x es menor que 10")
    } else if x == 15 {
        print("x es 15")
    } else if x == 70 && y == 500 {
        print("operador AND existo")
        mut probando string = "entorno del if"
        print(probando)
    } else if x > 100 {
        print("x mayor a 100")
    }
    
      else {
        print("x es 1000 o mayor")
    }

    if true {
      print("GANO GUATE")
    } 
    if false {
      print("no gano GUATE")
    } else {
        print("GANO GUATE, VAMOS AL FIN GANAN UN COSA")
    }

    
    print("a ver")


    mut dia string = "sabado"
    print(dia)
    switch dia {
      case "lunes":
        print("Inicio de semana")
      case "viernes":
        print("Casi fin de semana")
      default:
        print("Día cualquiera")
    }

  
  mut z int = 1
  print("Imprime 1: ", z++) // Imprime 1
  print("Imprime 2: ", z)   // Imprime 2
  print("Imprime 2: ", z--) // Imprime 2
  print("Imprime 1: ", z)   // Imprime 1
  
  print("==== Prueba For clasico ====")
  for w = 0 ; w <= 5 ; w++ {
      print(w)
  }

  print("==== Prueba For una condicion ====")
  mut c int = 0
  for c <= 3 {
      print(c)
      c++
  }

  print("==== Prueba For 3 ====")
  for  g = 1 ; g <= 3; g++ {
    for q = 1; q <= 2; q++ {
        print("g: ", g, ", q: ", q)
    }
  }

  //casteos
  mut numero int
  numero = Atoi("123")
  print("Número:", numero) // Salida: Número: 123

  print("ahora probar decimal")
  mut numero1 float64
  print("Número1:", numero1)
  
  numero1 = parseFloat("123.45")
  print("Número1:", numero1) // Salida: Número: 123.45
  numero1 = parseFloat("123.45")
  print("Número1:", numero1) // Salida: Número: 123.45

  //Slices
  numeros = []int {1, 2, 3, 4}
  print(numeros) // salida: [1, 2, 3, 4]

  palabras = []string {"hola", "mundo"}
  print(palabras) // salida: [hola, mundo]

  decimales = []float64 {1.5, 2.75, 3.1416}
  print(decimales) // salida esperada: [1.5, 2.75, 3.1416]

  condiciones = []bool {true, false, true}
  print(condiciones) // salida esperada: [true, false, true]

  letras = []rune {'a', 'b', 'c'}
  print(letras) // salida esperada: [a, b, c]

  mut vacio []float64
  print(vacio) // salida: []

  //Slices indexof 
  numeros1 = []int  {100, 200, 300}
  print((indexOf(numeros1, 300))) // salida: 2
  print((indexOf(numeros1, 500))) // salida: -1
  //Slices join
  word = []string {"hola", "mundoooo2", "go"}
  print(join(word, " ")) // Salida: "hola mundo go"

  //Slices len
  print(len(numeros)) // Salida: 4
  //slices append
  numerosappend = []int {1, 2, 3}
  print(numerosappend) // Salida: [1 2 3]
  numerosappend = append(numerosappend, 4)
  print(numerosappend) // Salida: [1 2 3 4]
  print("Elemento en índice 2:", numerosappend[2]) // Salida: 3
  // Modificación de un elemento existente
  numerosappend[2] = 100
  // Salida esperada: [1, 2, 100, 4]
  print("Slice después de la modificación:", numerosappend)

  //prueba funciones
  imprimirSuma(10, 20)
  saludar()
  print("El cuadrado de 5 es:", cuadrado(5))

  //Prueba Struct
  p = Persona{
    Nombre: "Alice",
    Edad: 25,
    EsEstudiante: false
  }

  jue = Juego{
    Nombre: "CS2",
    Genero: "Accion",
    Edad: 3,
    EsBueno: true,
    EsAccion: true
  }

  print(p.Nombre) // Alice
  print(p.Edad) // 25
  print(p.EsEstudiante) // false
  p.Nombre = "Bob"
  print(p.Nombre) // Bob
  print(jue.Nombre)
  print(jue.Genero)
}

